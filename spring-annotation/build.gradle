apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
apply plugin: "java"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // https://mvnrepository.com/artifact/org.springframework/spring-beans
    compile group: 'org.springframework', name: 'spring-beans', version: '5.2.1.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework/spring-core
    compile group: 'org.springframework', name: 'spring-core', version: '5.2.1.RELEASE'

    // https://mvnrepository.com/artifact/javax.inject/javax.inject
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.11'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.3.3.RELEASE'

    // https://mvnrepository.com/artifact/com.mchange/c3p0
    compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'




}


jar {
    destinationDir file("dist/apps")
    archiveName project.name + "-" + version + ".jar"

    exclude "**/*.xml"
    exclude "**/*.properties"

    doLast {
        copy {
            from file("src/main/resources/")
            into "dist/conf"
        }
        copy {
            from configurations.runtime
            into "dist/lib"
        }
        copy {
            from file("build/libs/")
            into "dist/apps"
        }
    }
}

// for upload to maven
task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

test {
    useJUnitPlatform()
}
buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        maven {
              url "https://maven.aliyun.com/nexus/content/groups/public/"
        }

        mavenCentral()//依赖Maven仓库
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


group 'spring-source-code'
version '1.0'

apply plugin: 'maven'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// 依赖仓库
repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }

    mavenLocal()
//        mavenCentral()
}

def gradle_version = "4"
if (gradle.gradleVersion.startsWith("6")
        || gradle.gradleVersion.startsWith("5")
        || gradle.gradleVersion.startsWith("4.10")
        || gradle.gradleVersion.startsWith("4.9")
) {
    println "Gradle with version >= 4.9 detected"
    gradle_version = "5"
} else {
    println "Gradle with version < 4.9 detected"
}

/*日志支持包*/
def log4j_version = "2.13.3"
List logger = [
        "org.apache.logging.log4j:log4j-api:$log4j_version",
        "org.apache.logging.log4j:log4j-core:$log4j_version",
        "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
        "org.apache.logging.log4j:log4j-web:$log4j_version",
        "org.slf4j:jcl-over-slf4j:1.7.30"
]



List apache_commons = [
        "commons-codec:commons-codec:1.9",//处理常用的编码方法的工具类包
        "commons-io:commons-io:2.5",//针对开发IO流功能的工具类库
        "org.apache.commons:commons-lang3:3.6"//提供了一系列static的方法Utils类
]

/*httpClient支持包*/
List httpClient = ['org.apache.httpcomponents:httpclient:4.5.3','org.apache.httpcomponents:httpmime:4.5.3','org.springframework:spring-test:2.5']

def spring_version = "5.2.15.RELEASE"
List spring = [
        "org.springframework:spring-core:$spring_version",//spring核心包
        "org.springframework:spring-beans:$spring_version",//spring的bean支持包
        "org.springframework:spring-context:$spring_version",//为Spring核心提供了大量扩展
        "org.springframework:spring-context-support:$spring_version",
        "org.springframework:spring-web:$spring_version",//web开发需要的核心包
        "org.springframework:spring-jdbc:$spring_version",//jdbc支持包
        "org.springframework:spring-webmvc:$spring_version",//spring web mvc支持包
        "org.springframework:spring-jms:$spring_version",//消息队列支持包
        "org.springframework:spring-test:$spring_version",
        "org.springframework:spring-aspects:$spring_version"
]

def spring_boot_version = "2.3.0.RELEASE"
List spring_boot = [
        //web支持包:spring-boot-starter/spring-boot-starter-bomcat/jackson-detabind/spring-web/spring-webmvc
        "org.springframework.boot:spring-boot-starter-web:$spring_boot_version",
        //freemarker支持
        "org.springframework.boot:spring-boot-starter-freemarker:$spring_boot_version"
]
List lombok = [
        'org.projectlombok:lombok:1.18.10'
]
/*json映射支持包*/
List jacksonDatabind = [
        'com.fasterxml.jackson.core:jackson-databind:2.11.0',
        'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.11.0'
]

/*日志async依赖包*/
List disruptor = ['com.lmax:disruptor:3.3.7']
//支持zip压缩
List ant = ['org.apache.ant:ant:1.10.3']

List guava = ["com.google.guava:guava:29.0-jre"]

List zookeeper = [
        'org.apache.zookeeper:zookeeper:3.4.10',
        'com.github.sgroschupf:zkclient:0.1'
]

List dangdang = [
        'com.dangdang:elastic-job-lite-core:2.1.5',
        'com.dangdang:elastic-job-lite-spring:2.1.5'
]


// 被dangdang引用，受dangdang限制，仅限2.x版本
List apache_curator = [
        "org.apache.curator:curator-framework:2.13.0",
        "org.apache.curator:curator-recipes:2.13.0"
]

List aws = [
        'com.amazonaws:aws-java-sdk-core:1.11.1028',
        'com.amazonaws:aws-java-sdk-s3:1.11.1028'
]

List junit = [
        'junit:junit:4.13.1'
]

List c3p0 = [
        'com.mchange:c3p0:0.9.5.2'
]

dependencies {
    compile logger, spring_boot, apache_commons, httpClient, spring, disruptor, ant, jacksonDatabind, lombok, guava, zookeeper,dangdang,apache_curator, aws, junit, c3p0
    runtime logger, spring_boot, apache_commons, httpClient, spring, disruptor, ant, jacksonDatabind, lombok, guava, zookeeper,dangdang,apache_curator, aws, junit, c3p0
    /*
// 这里被apache_curator强制引用，MoreExecutors.sameThreadExecutor()
compile('com.google.guava:guava:18.0') {
    force = true
}*/
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    if (gradle_version.startsWith("4")) {
        compile lombok
        testCompile lombok
    }
    if (gradle_version.startsWith("5")) {
        compileOnly lombok
        annotationProcessor lombok
        testAnnotationProcessor lombok
        testCompileOnly lombok
    }
}

//去除不需要的依赖
configurations.all {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'io.netty', module: 'netty'

    resolutionStrategy{
        force 'io.netty:netty-all:4.1.61.Final'
    }

}

jar {
    destinationDir file('dist/apps')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
        }
        copy {
            from file('src/main/resources/buildconf')
            into 'dist/conf'
        }
        copy {
            from file('script/')
            into 'dist/script'
        }
        copy {
            from file('font/')
            into 'dist/font'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('.').listFiles().findAll { File f -> (f.name.endsWith('.bat') || f.name.endsWith('.sh') || f.name.endsWith('.env')) }
            into 'dist'
        }
    }
}

